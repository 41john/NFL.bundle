NFL_VIDEOS_JSON				= 'http://www.nfl.com/static/embeddablevideo/%s.json'
NFL_VIDEOS_URL				= 'http://a.video.nfl.com/'
####################################################################################################
def MetadataObjectForURL(url):
	
	if url.startswith("http://www.nfl.com"):

		page = HTML.ElementFromURL(url)
		streamid = page.xpath('//div[@id="video-hero-player"]')[0].get('data-ecmid')
		json = JSON.ObjectFromURL(NFL_VIDEOS_JSON % streamid)
		sTitle = json['briefHeadline']
		sSummary = json['caption']
		sThumb = json['imagePaths']['m']
		
		return VideoClipObject(
			title = sTitle,
			summary = sSummary,
			thumb = sThumb,
		)
		
	if url.startswith("http://gamepass.nfl.com"):
		return VideoClipObject(
        	title = "NFL Gamepass"
    	)

####################################################################################################
def MediaObjectsForURL(url):

	if url.startswith("http://www.nfl.com"):
		return [
			MediaObject(
				bitrate = 3000,
				video_resolution = '1080',
				container = Container.MP4,
				video_codec = VideoCodec.H264,
				audio_codec = AudioCodec.AAC,
				audio_channels = 2,
				optimized_for_streaming = True,
				parts = [PartObject(key=Callback(PlayVideo, url = url, bitrate = '3000'))]				
			),
			MediaObject(
				bitrate = 2000,
				video_resolution = '720',
				container = Container.MP4,
				video_codec = VideoCodec.H264,
				audio_codec = AudioCodec.AAC,
				audio_channels = 2,
				optimized_for_streaming = True,
				parts = [PartObject(key=Callback(PlayVideo, url = url, bitrate = '2000'))]				
			),
			MediaObject(
				bitrate = 1200,
				video_resolution = '480',
				container = Container.MP4,
				video_codec = VideoCodec.H264,
				audio_codec = AudioCodec.AAC,
				audio_channels = 2,
				optimized_for_streaming = True,
				parts = [PartObject(key=Callback(PlayVideo, url = url, bitrate = '1200'))]				
			),
			MediaObject(
				bitrate = 700,
				video_resolution = '320',
				container = Container.MP4,
				video_codec = VideoCodec.H264,
				audio_codec = AudioCodec.AAC,
				audio_channels = 2,
				optimized_for_streaming = True,
				parts = [PartObject(key=Callback(PlayVideo, url = url, bitrate = '700'))]				
			),
			MediaObject(
				bitrate = 500,
				video_resolution = '240',
				container = Container.MP4,
				video_codec = VideoCodec.H264,
				audio_codec = AudioCodec.AAC,
				audio_channels = 2,
				optimized_for_streaming = True,
				parts = [PartObject(key=Callback(PlayVideo, url = url, bitrate = '500'))]				
			)
		]
	
	if url.startswith("http://gamepass.nfl.com"):
		return [
			MediaObject(
				bitrate = 1200,
				container = Container.MP4,
				video_codec = VideoCodec.H264,
				audio_codec = AudioCodec.AAC,
				audio_channels = 2,
				optimized_for_streaming = True,
				parts = [PartObject(key=Callback(PlayVideo, url = url, bitrate = '1200'))]
			)
		]

####################################################################################################
def PlayVideo(url, bitrate):

	if url.startswith("http://www.nfl.com"):

		page = HTML.ElementFromURL(url)
		streamid = page.xpath('//div[@id="video-hero-player"]')[0].get('data-ecmid')
		json = JSON.ObjectFromURL(NFL_VIDEOS_JSON % streamid)
	
		mp4_url3000 = NFL_VIDEOS_URL + json['cdnData']['bitrateInfo'][-1]['path']
		mp4_url2000 = NFL_VIDEOS_URL + json['cdnData']['bitrateInfo'][-2]['path']
		mp4_url1200 = NFL_VIDEOS_URL + json['cdnData']['bitrateInfo'][-3]['path']
		mp4_url700 = NFL_VIDEOS_URL + json['cdnData']['bitrateInfo'][-4]['path']
		mp4_url500 = NFL_VIDEOS_URL + json['cdnData']['bitrateInfo'][-5]['path']
		
		if bitrate == '3000':
			return Redirect(mp4_url3000)
		elif bitrate == '2000':
			return Redirect(mp4_url2000)
		elif bitrate == '1200':
			return Redirect(mp4_url1200)
		elif bitrate == '700':
			return Redirect(mp4_url700)
		elif bitrate == '500':
			return Redirect(mp4_url500)
			
	if url.startswith("http://gamepass.nfl.com"):
	
		headers_value = {'Cookie' : 'JSESSIONID=32229~5DEC46929CA2FC59FF0AFCE5E2FABD29; ARSL=CT-1; mbox=check#true#1374666234|session#1374666137517-969731#1374668034|PC#1374666137517-969731.21_07#1375875774; s_sess=%20s_eVar1%3DProd_GP_Nav%3B%20s_cc%3Dtrue%3B%20s_ppv%3D-%252C62%252C62%252C943%3B%20s_sq%3Dcbsnfl%253D%252526pid%25253Dnfl%2525253Agamepass%2525253Aschedule%252526pidt%25253D1%252526oid%25253Djavascript%2525253AlaunchApp%25252528%252525272012110800%25252527%25252529%252526ot%25253DA%3B; s_pers=%20s_nr%3D1374666286093%7C1377258286093%3B%20s_lastvisit%3D1374679961673%7C1469287961673%3B%20s_pv%3Dnfl%253Agamepass%253Aschedule%7C1374681761675%3B%20p36%3D41john%257Chold%7C1532359961677%3B; s_vi=[CS]v1|28F7DECD8514B870-60000175E000B687[CE]; __psrw=190211ea-f456-11e2-ad6c-22000a977ed0; headerSubProducts=preseasonLiveClass%2CgameRewindClass; nflpollUoF=0_0_1374453298867V0V0V0V0E; fsr.s=%7B%22v%22%3A1%2C%22rid%22%3A%22d1e16f9-69149616-36a5-7b5a-6e5a3%22%2C%22to%22%3A3%2C%22c%22%3A%22http%3A%2F%2Fwww.nfl.com%2F%22%2C%22pv%22%3A1%2C%22lc%22%3A%7B%22d2%22%3A%7B%22v%22%3A1%2C%22s%22%3Afalse%7D%7D%2C%22cd%22%3A2%2C%22f%22%3A1374666151424%7D; utag_main=_st:1374667973564$ses_id:1374666329899%3Bexp-session; cvo_sid1=VPYTBMDK4CV7; userId=u%3D41john%26t%3DNO%26d%3D1374666159826%26p%3Dfalse%26h%3Dc9a113fff6f70eff30ec60373939b6ea%26la%3D1374666159826%26sps%3D; at=u%3D41john%26a%3D41john%26e%3Djohn%40jr-pcs.co.uk%26ft%3DNO%26t%3D1374666159%26h%3D89ac66ae7ee00df321524cb2801a251c; ptnr=u%3D41john%26f%3DJohn%26e%3Djohn%40jr-pcs.co.uk%26t%3DNO%26d%3D1374666159826%26p%3Dfalse%26h%3Dd8a3f05060616fb9495422d16c56ce7b; bd=u%3D41john%26f%3DJohn%26e%3Djohn%40jr-pcs.co.uk%26t%3DNO%26d%3D1374666159827%26p%3Dfalse%26h%3D197f4036067a8d103733b6859140bece; mdot=u%3D41john%26f%3DJohn%26e%3Djohn%40jr-pcs.co.uk%26t%3DNO%26d%3D1374666159827%26p%3Dfalse%26h%3Dbc497283df7ba69ebd7b47a79da7cd42; nflsubs=41john|GAME_PASS; iptvpcplatform=nflgp'}

		game_id = url.replace("http://gamepass.nfl.com/nflgp/console.jsp?eid=", "")
		games_url = "http://gamepass.nfl.com/nflgp/servlets/games"
		post_values1 = {
		'eid' : game_id,
		'isFlex' : 'true'
		}
		games_pagedata = HTTP.Request(url=games_url, values=post_values1, headers=headers_value, errors='ignore').content
		games_page = XML.ElementFromString(games_pagedata)

		program_id = games_page.xpath('//programId/text()')
		videopath_url = "http://gamepass.nfl.com/nflgp/servlets/encryptvideopath"
		post_values2 = {
		'path' : program_id,
		'type' : 'fgpa',
		'isFlex' : 'true'
		}
 		videopath_pagedata = HTTP.Request(url=videopath_url, values=post_values2, headers=headers_value, errors='ignore').content
		videopath_page = XML.ElementFromString(videopath_pagedata)
		
		mp4_url = videopath_page.xpath('//path/text()')
		mp4_gamepassurl1200 = mp4_url.replace("adaptive://nlds82.neulion.com:443", "http://nlds82.cdnak.neulion.com").replace("pc.mp4", "1200.mp4")
		
		return Redirect(mp4_gamepassurl1200)

# Once this is working, I will edit the gamepass parts of the URL service above to include all bitrates
		
####################################################################################################